!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/darren@hiebert.com/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.0.1	//
IS_DEFINED	preprocessor.c	4;"	d	file:
IS_NOT_DEFINED	preprocessor.c	3;"	d	file:
_PASS1_	pass1.c	3;"	d	file:
_PASS1_	pass2.c	1;"	d	file:
assemble	pass1.c	/^struct instruct_info  *assemble(char *Instruction)$/;"	f
convert2hex	main.c	/^void convert2hex(FILE *fpraw,char *filename)$/;"	f
delete	preprocessor.c	/^char * delete(char *text,int pos,int length) \/\/DELETE$/;"	f
delete	prototypes.c	/^char * delete(char *text,int pos,int length) \/\/DELETE$/;"	f
dest	preprocessor.c	/^char dest[80];$/;"	v
dump_file	preprocessor.c	/^void dump_file(FILE *fp)$/;"	f
expand_macro	preprocessor.c	/^FILE * expand_macro(FILE *fpsrc,char *macro,char *expansion)$/;"	f
expand_macro	prototypes.c	/^FILE * expand_macro(FILE *fpsrc,char *macro,char *expansion)$/;"	f
gas51_errlist	vars.c	/^const char  *gas51_errlist[]={ "File not  found. ",$/;"	v
gas51_errno	vars.c	/^unsigned char gas51_errno ;$/;"	v
gas51_file_being_assembled	vars.c	/^char gas51_file_being_assembled[20];$/;"	v
gas51_line_no	vars.c	/^unsigned int gas51_line_no=0;  $/;"	v
gas51_no_of_slashes	vars.c	/^unsigned int gas51_no_of_slashes=0;$/;"	v
gas51_perror	preprocessor.c	/^void gas51_perror()$/;"	f
get_tokens	pass1.c	/^int get_tokens(char t_addr[][10],char *instruction)$/;"	f
hex_array	pass1.c	/^				int hex_array[3] ;$/;"	m	struct:instruct_info	file:
hex_code	pass1.c	/^   int hex_code;$/;"	m	struct:instruct	file:
include_file	preprocessor.c	/^FILE * include_file(char *file_to_include,FILE *newfp, long pos)$/;"	f
info	pass1.c	/^struct instruct_info  *info ;$/;"	v
insert	preprocessor.c	/^char * insert(char *text,int pos,char *string) \/\/INSERT$/;"	f
insert	prototypes.c	/^char * insert(char *text,int pos,char *string) \/\/INSERT$/;"	f
instruct	pass1.c	/^struct instruct$/;"	s	file:
instruct_info	pass1.c	/^struct instruct_info $/;"	s	file:
instructions	pass1.c	/^  struct instruct instructions[]={$/;"	v
islabel	pass1.c	/^int islabel(char *token)$/;"	f
isstandard	pass1.c	/^int isstandard(char *token)$/;"	f
join_line	preprocessor.c	/^char * join_line(FILE **fpsrcptr,char *buff)$/;"	f
join_line	prototypes.c	/^char * join_line(FILE **fpsrcptr,char *buff)$/;"	f
label_flag	pass1.c	/^				int label_flag ;$/;"	m	struct:instruct_info	file:
labels	pass1.c	/^				char labels[2][20] ;$/;"	m	struct:instruct_info	file:
line_splice	preprocessor.c	/^FILE * line_splice(FILE *fpsrc)$/;"	f
line_splice	prototypes.c	/^void line_splice(char *filename)$/;"	f
main	main.c	/^int main()$/;"	f
main	prototypes.c	/^int main(void)$/;"	f
mnemonic	pass1.c	/^   const char *mnemonic;$/;"	m	struct:instruct	file:
need_preprocessing	preprocessor.c	/^int need_preprocessing=1; \/\/Flag to indicate that file still requires preprocessing...'1' means 'YES' and '0' means 'NO'$/;"	v
nobytes	pass1.c	/^				int nobytes ;$/;"	m	struct:instruct_info	file:
nobytes	pass1.c	/^   int nobytes;$/;"	m	struct:instruct	file:
pass1	pass1.c	/^FILE *pass1(FILE *fpasmfile)$/;"	f
pass2	pass2.c	/^FILE * pass2(FILE *fprawfile)$/;"	f
pat_index	preprocessor.c	/^int pat_index(char *src_str,char *substr)$/;"	f
pat_index	prototypes.c	/^int pat_index(char *src_str,char *substr)$/;"	f
pop	pass1.c	/^struct gas51_file_info * pop(void)$/;"	f
preprocess	preprocessor.c	/^FILE * preprocess(char *file_to_preprocess)   \/\/function to preprocess the assembly file...$/;"	f
push	pass1.c	/^void push (struct gas51_file_info *temp_info )  $/;"	f
remove_all_spaces	preprocessor.c	/^char * remove_all_spaces(char *buff_to_clean)$/;"	f
replace_all	preprocessor.c	/^char * replace_all(char *text,char *symbol,char *replacement) \/\/REPLACE_ALL $/;"	f
replace_all	prototypes.c	/^char * replace_all(char *text,char *symbol,char *replacement) \/\/REPLACE_ALL $/;"	f
substr	preprocessor.c	/^char * substr(char *srcstr,int first_pos,int length)$/;"	f
substr	prototypes.c	/^char * substr(char *srcstr,int first_pos,int length)$/;"	f
temp_info	pass1.c	/^struct gas51_file_info *temp_info ;$/;"	v
trim	preprocessor.c	/^char * trim(char *buff_to_trim)$/;"	f
